{
    "basePath":"/api/v1",
    "swaggerVersion":"1.2",
    "apiVersion":"1.0.0",
    "resourcePath":"/tags",
    "apis":[
        {
            "path":"/tags",
            "operations":[
                {
                    "method":"GET",
                    "summary":"Get a list of tags",
                    "nickname":"getTags",
                    "type":"Tag",
                    "parameters":[
                        {
                            "paramType":"query",
                            "name":"title",
                            "type":"string",
                            "required":false,
                            "description":"Do a 'LIKE' search, you can also use '%'"
                        },
                        {
                            "paramType":"query",
                            "name":"fields",
                            "type":"string",
                            "required":false,
                            "description":"Fields to return separate by comas: title,id"
                        },
                        {
                            "paramType":"query",
                            "name":"limit",
                            "type":"integer",
                            "required":false,
                            "description":"Number of object to return (max 100, default 25)",
                            "format":"int64",
                            "minimum":"1"
                        },
                        {
                            "paramType":"query",
                            "name":"limitstart",
                            "type":"integer",
                            "required":false,
                            "description":"Start of the return (default 0)",
                            "format":"int64",
                            "minimum":"0"
                        },
                        {
                            "paramType":"query",
                            "name":"order",
                            "type":"string",
                            "required":false,
                            "description":"ORDER by this field separete by comas. Add + / - after field for set ASC / DESC: type+,name-"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code":403,
                            "message":"Invalid API Key"
                        }
                    ],
                    "notes":"Returns a list of tags"
                },
                {
                    "method":"POST",
                    "summary":"Create a tag",
                    "nickname":"CreateTags",
                    "type":"Tag",
                    "parameters":[
                        {
                            "paramType":"body",
                            "name":"body",
                            "type":"Tag",
                            "required":true,
                            "description":"JSON object Tag"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code":201,
                            "message":"Saved successfully"
                        },
                        {
                            "code":400,
                            "message":"Invalid data"
                        },
                        {
                            "code":403,
                            "message":"Invalid API Key"
                        },
                        {
                            "code":404,
                            "message":"Not saved"
                        }
                    ],
                    "notes":"Create a tag"
                }
            ]
        },
        {
            "path":"/tags/{id}",
            "operations":[
                {
                    "method":"GET",
                    "summary":"Find tag by ID",
                    "nickname":"getTagById",
                    "type":"Tag",
                    "parameters":[
                        {
                            "paramType":"path",
                            "name":"id",
                            "type":"integer",
                            "required":true,
                            "description":"ID of tag that needs to be fetched",
                            "format":"int64",
                            "minimum":"1"
                        },
                        {
                            "paramType":"query",
                            "name":"fields",
                            "type":"string",
                            "required":false,
                            "description":"Fields to return separate by comas: name,id"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code":400,
                            "message":"Invalid ID"
                        },
                        {
                            "code":403,
                            "message":"Invalid API Key"
                        }
                    ],
                    "notes":"Returns a tag based on ID"
                },
                {
                    "method":"PUT",
                    "summary":"Update a tag",
                    "nickname":"updateTagId",
                    "type":"Tag",
                    "parameters":[
                        {
                            "paramType":"path",
                            "name":"id",
                            "type":"integer",
                            "required":true,
                            "description":"ID of tag",
                            "format":"int64",
                            "minimum":"1"
                        },
                        {
                            "paramType":"body",
                            "name":"body",
                            "type":"Tag",
                            "required":true,
                            "description":"JSON object of the updated tag"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code":200,
                            "message":"Updated successfully"
                        },
                        {
                            "code":400,
                            "message":"Invalid data"
                        },
                        {
                            "code":403,
                            "message":"Invalid API Key"
                        },
                        {
                            "code":404,
                            "message":"Invalid ID"
                        }
                    ],
                    "notes":"Update a tag"
                },
                {
                    "method":"DELETE",
                    "summary":"Delete a specific tag",
                    "nickname":"deleteTagById",
                    "type":"string",
                    "parameters":[
                        {
                            "paramType":"path",
                            "name":"id",
                            "type":"integer",
                            "required":true,
                            "description":"ID of tag that needs to be deleted",
                            "format":"int64",
                            "minimum":"1"
                        }
                    ],
                    "responseMessages":[
                        {
                            "code":200,
                            "message":"Tag correctly deleted"
                        },
                        {
                            "code":403,
                            "message":"Invalid API Key"
                        },
                        {
                            "code":404,
                            "message":"Invalid ID"
                        }
                    ],
                    "notes":"Delete a specific tag"
                }
            ]
        }
    ],
    "models":{
        "Tag":{
            "id":"Tag",
            "properties":{
                "id":{
                    "description":"Unique identifier for the tag",
                    "type":"integer",
                    "format":"int64"
                },
                "title":{
                    "description":"Friendly name for the tag",
                    "type":"string"
                },
                "alias":{
                    "description":"URL alias",
                    "type":"string"
                },
                "language":{
                    "description":"Language value like fr-FR",
                    "type":"string"
                }
            },
            "required":[
                "id",
                "title"
            ]
        }
    },
    "produces":[
        "application/json",
        "application/xml",
        "text/plain"
    ]
}